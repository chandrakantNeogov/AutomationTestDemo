name: CI for Pull Request

on:
  pull_request:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0' # Specify the Ruby version you want to use

      - name: Install Fastlane
        run: gem install fastlane

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 33
          target: android-33
          arch: x86_64
          script: |
            yes | sdkmanager --licenses
            sdkmanager "build-tools;33.0.0" "platforms;android-33" "platform-tools"
      - name: Start Emulator
        run: |
          adb devices
          echo "adv.ini.encoding=UTF-8" > ~/.android/avd/test.ini
          echo "hw.cpu.arch=x86" >> ~/.android/avd/test.avd/config.ini
          echo "hw.ramSize=2048" >> ~/.android/avd/test.avd/config.ini
          echo "disk.dataPartition.size=1G" >> ~/.android/avd/test.avd/config.ini
          sdkmanager --install "system-images;android-33;google_apis;x86_64"
          echo "no-snapshot-load" >> ~/.android/avd/test.avd/config.ini
          echo "no" | avdmanager create avd -n test -k "system-images;android-30;default;x86_64"
          emulator -avd test -no-snapshot -no-window -no-audio &
          adb wait-for-device
          adb shell input keyevent 82
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Fastlane
        run: fastlane android test
      - name: Run Fastlane for android app distribution
        run: fastlane ios beta