name: CI for PRs and Merges

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - master

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      checks: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Environment
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ruby-full
          ruby --version
          echo "Ruby set up successfully."

      - name: Install Fastlane
        run: gem install fastlane

      - <<: &setup-jdk-android
        name: Set up JDK and Android SDK
        steps:
          - uses: actions/setup-java@v3
            with:
              java-version: '17'
              distribution: 'temurin'

          - uses: android-actions/setup-android@v2
            with:
              api-level: 30
              target: 'default'
              arch: 'x86_64'
              profile: 'pixel'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build app and test APKs
        run: ./gradlew assembleDebug assembleAndroidTest

      - name: List APK files
        run: ls -R app/build/outputs/apk/

      - name: Run instrumental tests with Emulator.wtf
        uses: emulator-wtf/run-tests@v0
        with:
          api-token: ${{ secrets.EW_API_TOKEN }}
          app: app/build/outputs/apk/debug/app-debug.apk
          test: app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk
          outputs-dir: build/test-results
          device: pixel2
          os-version: 30
          timeout-duration: 10m

      - name: Publish test report
        uses: mikepenz/action-junit-report@v2
        if: always()
        with:
          report_paths: 'build/test-results/**/*.xml'

      - name: Run Fastlane Unit Tests
        run: fastlane android test

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - *setup-jdk-android

      - name: Build app for deployment
        run: ./gradlew assembleRelease

      - name: Deploy with Firebase using Fastlane
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: fastlane android beta